#include<stdio.h>
#include<stdbool.h>




void left(int userCord[]){ //moves left
    userCord[0]--;
    return;
}
void right(int userCord[]){ //moves right
    userCord[0]++;
    return;
}
void down(int userCord[]){//moves down
    userCord[1]++;
    return;
}
void up(int userCord[]){ //moves up
    userCord[1]--;
    return;
}
void move(char moveInput, int currentCord[], int newCords[]) {
    newCords[0] = currentCord[0];
    newCords[1] = currentCord[1];
    switch(moveInput){
        case 'a':
            newCords[0] -= 1;
            break;
        case 'w':
            newCords[1] -= 1;
            break;
        case 's':
            newCords[1] += 1;
            break;
        case 'd':
            newCords[0] += 1;
            break;
    }
}



void displayBoard(int SIZEX, int SIZEY, char GAMEBOARD[SIZEX][SIZEY]){
for(int i = 0; i<SIZEX; i++){
for(int j = 0; j<SIZEY; j++){
printf("%2c", GAMEBOARD[i][j]);}
printf("\n");
}}






int main(){
const int SIZEX = 19;// Size of Gameboard X 
const int SIZEY = 21;//Size of Gameboard Y
int userDir = 0; // used to update DISPLAYUSER.
const char DISPLAYUSER[4] = {'>', '<', '^', 'v'}; //displays what direction the user is facing
char GAMEBOARD[19][21];
int userCord[2] = {10, 13}; //current space of the user
bool run; //if this is false the game stops
char userInput; // actual user input
int newCord[2]; //returns new cord from move function
//malloc(GAMEBOARD);
while(run){
    displayALL(SIZEX, SIZEY,GAMEBOARD, userCord);
    scanf(userInput);
    if(userInput == '0'){
        run == false;
    }
    move(userInput, userCord, newCord);
    gameReact();





}


}
